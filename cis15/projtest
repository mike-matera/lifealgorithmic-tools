#! /usr/bin/env python3

"""
Test a CIS-15 Project
"""

import os
import sys
import argparse
import Levenshtein
import unittest

from pathlib import Path

parser = argparse.ArgumentParser(
    description="Test your CIS-15 Project.",
)
parser.add_argument('project_file', nargs=1, help='The project file.')


def main():
    args = parser.parse_args()
    python = Path(args.project_file[0])

    if not python.exists():
        print(f"The file {python} doesn't exist.")
        quit(-1)

    os.chdir(python.parent)

    # Load test modules.
    tests = []

    tests_dir = Path(__file__).parent / 'tests'
    if not tests_dir.exists():
        tests_dir = Path(__file__).parent.parent / 'lib' / 'python3.6' / 'site-packages' / 'cis15' / 'tests'
    for module_path in tests_dir.glob('*.py'):
        if not str(module_path.name).startswith('__'):
            tests.append(module_path.name)

    if python.name not in tests:
        # Try to guess what test they might have wanted.
        min_dist = 0
        min_mod = None
        for mod in tests:
            dist = Levenshtein.distance(python.name, mod)
            if min_mod is None or dist < min_dist:
                min_dist = dist
                min_mod = mod

        print(f"I don't have a test for {python}. Did you mean {min_mod}?")
        quit(-2)

    unittest.main(module=f"cis15.tests.{Path(python).stem}", argv=[sys.argv[0]], failfast=True, verbosity=0)


if __name__ == '__main__':
    main()
