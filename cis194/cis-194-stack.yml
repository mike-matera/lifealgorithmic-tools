AWSTemplateFormatVersion: 2010-09-09
Description: The cis-194 Network

Resources:

  #
  # Create the VPC for cis-194 Networks and related infrastructure.
  #

  CIS194Cloud:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.194.0.0/16
      Tags:
        -
          Key: Application
          Value: !Ref AWS::StackId

  Gateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        -
          Key: Application
          Value: !Ref AWS::StackId

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - CIS194Cloud
      - Gateway
    Properties:
      VpcId: !Ref CIS194Cloud
      InternetGatewayId: !Ref Gateway

  IPv6CIDRBlock:
     Type: AWS::EC2::VPCCidrBlock
     Properties:
        AmazonProvidedIpv6CidrBlock: true
        VpcId: !Ref CIS194Cloud

  Routing:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CIS194Cloud

  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - ExternalSubnet
      - Gateway
    Properties:
       RouteTableId: !Ref Routing
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref Gateway

  #
  # Create the external network
  #

  ExternalSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: IPv6CIDRBlock
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.194.0.0/24
      Ipv6CidrBlock:
        Fn::Sub:
          - "${VpcPart}${SubnetPart}"
          - SubnetPart: '01::/64'
            VpcPart: !Select [ 0, !Split [ '00::/56', !Select [ 0, !GetAtt CIS194Cloud.Ipv6CidrBlocks ]]]
      MapPublicIpOnLaunch: True
      VpcId: !Ref CIS194Cloud
      Tags:
        -
          Key: Application
          Value: !Ref AWS::StackId

  ExternalSubnetRoute:
    DependsOn:
      - ExternalSubnet
      - Routing
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ExternalSubnet
      RouteTableId: !Ref Routing

  ExternalACL:
    Type: AWS::EC2::NetworkAcl
    DependsOn:
      - CIS194Cloud
    Properties:
      VpcId: !Ref CIS194Cloud

  AllowIngressAllExternal:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn:
      - ExternalACL
    Properties:
      NetworkAclId: !Ref ExternalACL
      RuleNumber: 10
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535

  AllowEgressAllExternal:
    Type: AWS::EC2::NetworkAclEntry
    DependsOn:
      - ExternalACL
    Properties:
      NetworkAclId: !Ref ExternalACL
      RuleNumber: 10
      Egress: true
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535

  ExternalACLAssociation:
     Type: AWS::EC2::SubnetNetworkAclAssociation
     DependsOn:
       - ExternalSubnet
       - ExternalACL
     Properties:
       SubnetId: !Ref ExternalSubnet
       NetworkAclId: !Ref ExternalACL

  #
  # Create a security group that allows inbound RDP.
  #

  AllowRDP:
    Type: AWS::EC2::SecurityGroup
    DependsOn: CIS194Cloud
    Properties:
      GroupDescription: Allow RDP into this network
      GroupName: Allow RDP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 10.194.0.0/16
      Tags:
        -
          Key: Application
          Value: !Ref AWS::StackId
      VpcId: !Ref CIS194Cloud

  #
  # Create the Server.
  #

  Server:
    Type: AWS::EC2::Instance
    DependsOn:
      - ExternalSubnet
      - AllowRDP
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: ami-089900441acecb80c
      InstanceType: t2.medium
      NetworkInterfaces:
        -
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          PrivateIpAddress: 10.194.0.10
          SubnetId: !Ref ExternalSubnet
          GroupSet:
            - !Ref AllowRDP
      Tags:
        -
          Key: Application
          Value: !Ref AWS::StackId
        -
          Key: Name
          Value: Windows Server 2019

  #
  # Create the Client.
  #

  Client:
    Type: AWS::EC2::Instance
    DependsOn:
      - ExternalSubnet
      - AllowRDP
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: ami-0a98bc37f5116dee3 # Custom Windows Client
      InstanceType: t2.large
      NetworkInterfaces:
        -
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          PrivateIpAddress: 10.194.0.11
          SubnetId: !Ref ExternalSubnet
          GroupSet:
            - !Ref AllowRDP
      Tags:
        -
          Key: Application
          Value: !Ref AWS::StackId
        -
          Key: Name
          Value: Windows 10

